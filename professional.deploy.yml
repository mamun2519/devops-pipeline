name: Deployment Pipeline
on:
  # check the ci pipeline is successful
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
jobs
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
      

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # Step 3: Set Dynamic Version Tag
      # Example: v1, v2, v3...
      - name: Set image tag
        run: echo "IMAGE_TAG=v${{ github.run_number }}" >> $GITHUB_ENV

      # Step 4: Build Docker image
      - name: Build Docker image
        run: |
          docker build \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ env.IMAGE_TAG }} .

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ env.IMAGE_TAG }}
      # Step 6: Deploy to VPS by SSH
      - name: Deploy to VPS
        env:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i $key $username@$host << 'EOF'
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 80:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:latest
          EOF